plot(x,y,col = kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col= kmeans(dataFrame,6)$cluster,pch=19,cex=2 )
plot(x,y,col= kmeans(dataFrame,6)$cluster,pch=19,cex=2 )
plot(x,y,col= kmeans(dataFrame,6)$cluster,pch=19,cex=2 )
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*%t(matv)
scale(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2[,2]
svd2
svd2[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
(svd1$u[,1]*svd1$d[1]) %*%svd1$v[,1]
a1 <- (svd1$u[,1]*svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<-svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd4subject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<- subset(ssd,boolean,subject =1)
sub1<- subset(ssd, subject =1)
sub1<- subset(ssd, subject == 1)
dim(sub1)
names(sub1,12)
names(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering<- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist<-dist(x[,10:12])
mdist<-dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1<- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist<-dist(sub1[,10:12], maxCon)
mdist<-dist(sub1[,10:12])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-c(562,563)], centers= 6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)], centers= 6, nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kclust$size ==29)
laying<-which(kClust$size ==29)
plot(kClust$centers[laying,1:12], pch =19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size =49)
walkdown <- which(kClust$size =49)
walkdown <- which(kClust$size ==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
sessionInfo()
1+2+3+4+5+6
21/6
1*1/6+2*1/6+3*1/6+4*1/6+5*1/6+6*1/6
1/16
6/7
rexp(n, lambda)
rexp(100, 0.5)
rexp(n, 0.2)
rexp(40, 0.2)
allmean<-sapply(1:1000,rexp(40,02),mean)
?apply
apply(100,rexp(40,02),mean)
dim(100)
allmean<-sapply(1:100,function(i)mean(rexp(40,02)))
allmean
allmean<-sapply(1:1000,function(i)mean(rexp(40,02)))
allmean
theoretical_mean<-1/0.2
theoretical_mean
sample_mean_distribution<-sapply(1:1000,function(i)mean(rexp(40,0.2)))
mean(sample_mean_distribution)
sample_mean-theoretical_mean
sample_mean<-mean(sample_mean_distribution)
sample_mean<-mean(sample_mean_distribution)
sample_mean-theoretical_mean
sample_variance<-sd(sample_mean_distribution)
sample_variance
theoretical_variance<-1/0.2
sd?
?sd
var(sample_mean_distribution)
sample_variance-theoretical_variance
sample_variance<-var(sample_mean_distribution)
sample_variance-theoretical_variance
theoretical_variance<-1/0.2
sample_variance-theoretical_variance
sample_variance
theoretical_variance
#set lambda qeual to  0.2, average number equal to 40, sample numbers equal to 1000
lambda = 0.2
average_number = 40
sample_number=1000
# sample the distribution of averages of 40 exponentials a thousand times
sample_mean_distribution<-sapply(1:sample_number,function(i)mean(rexp(sample_number,lambda)))
# sample mean
sample_mean<-mean(sample_mean_distribution)
# theoretical mean of the distribution is 1/lambda
theoretical_mean<-1/0.2
# comparation of sample mean and theoretical mean
sample_mean-theoretical_mean
# sample variance
sample_variance<-var(sample_mean_distribution)
# theoretical variance of the distribution is 1/lambda
theoretical_variance<-1/0.2
# comparation of sample variance and theoretical variance
sample_variance-theoretical_variance
sample_variance/theoretical_variance
(theoretical_variance/sample_number)/sample_variance
theoretical_variance/sample_number
sample_variance
lambda = 0.2
average_number = 40
sample_number=1000
# sample the distribution of averages of 40 exponentials a thousand times
sample_mean_distribution<-sapply(1:sample_number,function(i)mean(rexp(average_number,lambda)))
# sample mean
sample_mean<-mean(sample_mean_distribution)
# theoretical mean of the distribution is 1/lambda
theoretical_mean<-1/0.2
# comparation of sample mean and theoretical mean
sample_mean-theoretical_mean
# sample variance
sample_variance<-var(sample_mean_distribution)
# theoretical variance of the distribution is 1/lambda
theoretical_variance<-1/0.2
sample_variance
sample_mean
sample_variance<-var(sample_mean_distribution)
sample_variance
sqrt(theoretical_variance/sample_number)
theoretical_variance<-(1/lambda)^2
(1/lambda)/sqrt(sample_number)
sqrt(sample_variance)
lambda = 0.2
average_number = 40
sample_number=1000
sample_mean_distribution<-sapply(1:sample_number,
function(i)mean(rexp(average_number,lambda)))
sample_mean<-mean(sample_mean_distribution)
theoretical_mean<-1/lambda
sample_mean-theoretical_mean
sample_mean
sample_variance<-var(sample_mean_distribution)
sample_variance
sd(sample_mean_distribution)
var(sample_mean_distribution)
theoretical_variance<-(1/lambda)^2
theoretical_variance
sqrt(theoretical_variance)/sqrt(1000)
sqrt(1000)
sample_variance<-var(sample_mean_distribution)
sample_variance^2
sample_variance
sqrt(sample_variance)
theoretical_variance
theoretical_variance/sample_number
sample_variance
hist(sample_mean_distribution)
?hist
hist(sample_mean_distribution,density=100)
hist(sample_mean_distribution,density=20)
hist(sample_mean_distribution,density=20,breaks = 10)
hist(sample_mean_distribution,density=20,breaks = 100)
hist(sample_mean_distribution,density=20,breaks = 20)
hist(sample_mean_distribution,density=20,breaks = 30)
hist(sample_mean_distribution,density=20,breaks = 40)
hist(sample_mean_distribution,density=20,breaks = 10)
sample_mean_distribution<-apply(
matrix(rexp(average_number,lambda),sample_number),
1,
mean))
sample_mean_distribution<-apply(
matrix(rexp(average_number,lambda),sample_number),
1,
mean))
sample_mean_distribution<-apply(
matrix(rexp(average_number,lambda),sample_number),
1, mean)
sd(sample_mean_distribution)
theoretical_variance<-(1/lambda)^2/sqrt(sample_number)
theoretical_variance
sd(sample_mean_distribution)
sample_mean_distribution<-sapply(1:sample_number,
function(i)mean(rexp(average_number,lambda)))
sample_variance<-var(sample_mean_distribution)
sample_variance
theoretical_variance<-(1/lambda)^2/sample_number
theoretical_variance
sd(sample_mean_distribution)
var(sample_mean_distribution)
sample_mean_distribution
mean(sample_mean_distribution)
sd(sample_mean_distribution)
1/lamabda
1/lambda
5/sqrt(1000)
var(sample_mean_distribution)
var(sample_mean_distribution)
sample_mean_distribution<-sapply(1:sample_number,
function(i)mean(rexp(average_number,lambda)))
var(sample_mean_distribution)
var(sample_mean_distribution)
mean(sample_mean_distribution)
(1/lambda)^2/sqrt(sample_number)
sd(sample_mean_distribution)
theoretical_variance<-((1/lambda)^2)^2/sample_number
theoretical_variance
theoretical_variance<-((1/lambda)^2)^2/sample_number
theoretical_variance
# sample the distribution of averages of 40 exponentials a thousand times
sample_mean_distribution<-sapply(1:sample_number,
function(i)mean(rexp(average_number,lambda)))
var(sample_mean_distribution)
hist(sample_mean_distribution,density = 40)
hist(rexp(1000,lambda))
hist(sample_mean_distribution)
hist(sample_mean_distribution)
abline(v= sample_mean, col = “blue”, lwd = 4, lay = 2)
abline(v= theoretical_mean, col = “red”, lwd = 4, lay = 2)
hist(sample_mean_distribution)
abline(v= sample_mean, col = "blue", lwd = 4, lay = 2)
abline(v= theoretical_mean, col = "red", lwd = 4, lay = 2)
hist(sample_mean_distribution,title="distribution of average 40 exponentials")
abline(v= sample_mean, col = "blue", lwd = 4, lay = 2)
abline(v= theoretical_mean, col = "red", lwd = 4, lay = 2)
hist(sample_mean_distribution,title="distribution of average 40 exponentials")
?hist
hist(sample_mean_distribution, main="distribution of average 40 exponentials")
hist(sample_mean_distribution, main="Distribution of average 40 exponentials")
abline(v= sample_mean, col = "blue", lwd = 4, lay = 2)
abline(v= theoretical_mean, col = "red", lwd = 4, lay = 2)
hist(sample_mean_distribution, main="Distribution of average 40 exponentials")
abline(v= sample_variance, col = "blue", lwd = 4, lay = 2)
abline(v= theoretical_variance, col = "red", lwd = 4, lay = 2)
hist(sample_mean_distribution, main="Distribution of average 40 exponentials")
abline(v= sample_variance, col = "blue", lwd = 4)
abline(v= theoretical_variance, col = "red", lwd = 4)
hist(sample_mean_distribution, main="Distribution of average 40 exponentials")
abline(v= sample_variance, col = "blue", lwd = 4)
abline(v= theoretical_variance, col = "red", lwd = 4)
abline(v= sample_mean, col = "blue", lwd = 4)
abline(v= theoretical_mean, col = "red", lwd = 4)
sample_variance
abline(v= sample_variance, col = "blue", lwd = 4)
hist(sample_mean_distribution, main="Distribution of average 40 exponentials")
abline(v= sample_mean+sample_variance, col = "blue", lwd = 4)
abline(v= sample_mean+theoretical_variance, col = "red", lwd = 4)
load(ToothGrowth)
?loaddata
?load
ToothGrowth
summary(ToothGrowth)
library(ggplot2)
facet_grid(ToothGrwth,.~len)
facet_grid(ToothGrowth,.~len)
facet_grid(ToothGrwth,.supp~len)
facet_grid(ToothGrowth,supp~len)
ggplot(ToothGrowth)
facet_grid(ToothGrowth,supp~len)
facet_grid(ToothGrowth,.~len)
ggtitle("Swirl Rules!")
g<-ggplot(ToothGrowth)
g+ggtitle("Swirl Rules!")
g+facet_grid(ToothGrowth,.~len)
g+facet_grid(.~len)
g+facet_grid(len~.)
g<-ggplot(ToothGrowth)
g+facet_grid(len~.)
g+facet_grid(.~supp)
names(ToothGrowth)
g+facet_grid(len~supp)
g+facet_grid(dose~supp)
g+geom_point(color = "pink", size =4, alpha = 1/2)
g+geom_point(len,color = "pink", size =4, alpha = 1/2)
g<-ggplot(ToothGrowth)
g+facet_grid(dose~supp)
g+geom_point(len,color = "pink", size =4, alpha = 1/2)
g+geom_point(ToothGrowth$len,color = "pink", size =4, alpha = 1/2)
g<-ggplot(ToothGrowth)
g+geom_point(color = "pink", size =4, alpha = 1/2)
g<-ggplot(ToothGrowth,axe(supp,dose))
g<-ggplot(ToothGrowth,aes(supp,dose))
g+geom_point(color = "pink", size =4, alpha = 1/2)
g<-ggplot(ToothGrowth,aes(len,dose))
g+geom_point(color = "pink", size =4, alpha = 1/2)
g+facet_grid(dose~supp)
g+geom_point(color = "pink", size =4, alpha = 1/2)
g<-ggplot(ToothGrowth,aes(len,dose))
g+facet_grid(dose~supp,nrow=2,ncol=4)
g+geom_point(color = "pink", size =4, alpha = 1/2)
g<-ggplot(ToothGrowth,aes(len,dose))
g+facet_grid(dose~supp)
g+geom_point(color = "pink", size =4, alpha = 1/2)
g<-ggplot(ToothGrowth)
g+facet_grid(dose~supp)
g+geom_point(color = "pink", size =4, alpha = 1/2)
names(ToothGrowth)
g<-ggplot(ToothGrowth, aes(x=len, y= supp , color= dose))+
geom_point()+
facet_wrap(~dose)
g
g<-ggplot(ToothGrowth, aes(x=len, y= supp , color= dose))+
geom_point()+
facet_wrap(~supp)
g
g<-ggplot(ToothGrowth, aes(x=len, y= supp , color= dose))+
geom_point()+
facet_wrap(~dose)
g
g<-ggplot(ToothGrowth, aes(x=len, y= supp , color= dose))+
geom_point()+
facet_wrap(dose~supp)
g
mu<-mean(ToothGrowth$len)
mu
sigma<-var(ToothGrowth$len)
sigma
names(ToothGrowth)
head(ToothGrowth)
unique(ToothGrowth$supp)
ToothGrowth(ToothGrowth$supp=='VC')
ToothGrowth$len(ToothGrowth$supp=='VC')
ToothGrowth$supp=='VC'
ToothGrowth$len
ToothGrowth$len[ToothGrowth$supp=='VC']
meansuppvc<-mean(ToothGrowth$len[ToothGrowth$supp=='VC'])
meansuppvc
length(ToothGrowth)
length(ToothGrowth$len)
n <- length(ToothGrowth$len)
con_int<-mu + c(-1,1)*2*sigma/sqrt(n)
con_int
unique(ToothGrowth$supp)
unique(ToothGrowth$dose)
meansuppvc<-mean(ToothGrowth$len[ToothGrowth$supp=='VC'])
meansuppoj<-mean(ToothGrowth$len[ToothGrowth$supp=='OJ'])
meandose05<-mean(ToothGrowth$len[ToothGrowth$dose==.5])
meandose05
meandose05<-mean(ToothGrowth$len[ToothGrowth$dose==.5])
meandose10<-mean(ToothGrowth$len[ToothGrowth$dose==1.0])
meandose20<-mean(ToothGrowth$len[ToothGrowth$dose==2.0])
meandose10
meandose20
con_int
meansuppvc
con_int-meansuppvc
con_int-meansuppvc
con_int-meansuppoj
con_int-meandose05
con_int-meandose10
con_int-meandose20
?t.test
which=1
?plot
?plot(which)
?plot(which)
?deviance
data('mtcars')
head('mtcars')
head(mtcars)
mtcars$am <- as.factor(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$vs <- as.factor(mtcars$vs)
mtcars$gear <- as.factor(mtcars$gear)
mtcars$carb <- as.factor(mtcars$carb)
class(mtcars)
str(mtcars)
col(mtcars)
class(col(mtcars))
mean(mtcars$mpg[which(mtcars$am==1)])
mean(mtcars$mpg[which(mtcars$am==1)])-mean(mtcars$mpg[which(mtcars$am==0)])
model1 <- lm(mpg ~ ., df)
model1 <- lm(mpg ~. , df)
model1 <- lm(mpg ~am, df)
model1 <- lm(mpg ~ am -1, df)
model1 <- lm(mpg ~ am -1, mtcars)
df<-mtcars
model1 <- lm(mpg ~ am -1, df)
model1 <- lm(mpg ~ am, df)
summary(model1)
summary(model1)$Multiple R-squared
summary(model1)$MultipleR-squared
summary(model1)$Coefficients
summary(model1)$Coeff
summary(model1)$coeff
summary(model1)$multiple
summary(model1)$mult
summary(model1)$multi
summary(model1)$r-squared
summary(model1)$r
model1 <- lm(mpg ~ ., df)
summary(model1)
model2 <- lm(mpg ~ wt + qsec + cyl + am , df)
summary(model2)
model3 <- lm(mpg ~ wt + hp + cyl + am , df)
summary(model3)
model1 <- lm(mpg ~ am, df)
model2 <- lm(mpg ~ wt + hp + cyl + am , df)
anova(model1, model2)
plot(model2)
plot(model2)
anova(model1,model2)
setwd("/Users/freefrog/Studing/DataScience/The-Science-of-Decisions-Project/stroopdata.csv")
setwd("/Users/freefrog/Studing/DataScience/The-Science-of-Decisions-Project")
localfile <- file.path(getwd(), "stroopdata.csv")
dataset <-
read.csv(file = 'stroopdata.csv', header = TRUE)
datadset
dataset
dataset[1]
mean(dataset[1])
mean(dataset[1,])
dataset[1,]
dataset[,1]
mean(dataset[,1])
mean(dataset[,2])
sd(dataset[,1])
sd(dataset[,2])
plot(dataset[,1])
hist(dataset[,1])
?hist
hist(dataset[,1],density = 10)
hist(dataset[,1],density = 20)
hist(dataset[,1],density = 20,freq = 1)
hist(dataset[,1],density = 20,freq = 10)
hist(dataset[,1],density = 20,breaks = 10)
hist(dataset[,1], density = 20, breaks = 4)
hist(dataset[,1], density = 20, breaks = 5)
hist(dataset[,1], density = 20, breaks = 6)
hist(dataset[,1], density = 20, breaks = 7)
hist(dataset[,1], density = 20, breaks = 8)
hist(dataset[,1], density = 20, breaks = 20)
hist(dataset[,1], density = 20, breaks = 10)
hist(dataset[,1], density = 20, breaks = 6)
hist(dataset[,1], density = 20, breaks = 8)
hist(dataset[,1], density = 20, breaks = 9)
hist(dataset[,1], density = 20, breaks = 10)
hist(dataset[,1], density = 20, breaks = 5)
hist(dataset[,1], density = 20, breaks = 5, xlab = Congruent)
hist(dataset[,1], density = 20, breaks = 5, xlab = 'Congruent')
hist(dataset[,1], density = 20, breaks = 5, xlab = 'Congruent', title = 'time spent in congruent condition')
hist(dataset[,1], density = 20, breaks = 5, xlab = 'Congruent', main = 'time spent in congruent condition')
hist(dataset[,1], density = 20, breaks = 5, xlab = 'Congruent', main = 'Time spent in congruent condition')
hist(dataset[,2], density = 20, breaks = 5, xlab = 'Congruent', main = 'Time spent in congruent condition')
hist(dataset[,2], density = 20, breaks = 5, xlab = 'Incongruent', main = 'Time spent in incongruent condition')
abline(v= mean(dataset[,2]), col = "blue", lwd = 1)
abline(v= mean(dataset[,2]), col = "blue", lwd = 1)
hist(dataset[,1], density = 20, breaks = 5, xlab = 'Congruent', main = 'Time spent in congruent condition')
abline(v= mean(dataset[,1]), col = "blue", lwd = 1)
hist(dataset[,1], density = 20, breaks = 5, xlim = range(0:40), xlab = 'Congruent', main = 'Time spent in congruent condition')
hist(dataset[,1], density = 20, breaks = 5, xlim = range(0:40), ylim = range(0:12),xlab = 'Congruent', main = 'Time spent in congruent condition')
abline(v= mean(dataset[,1]), col = "blue", lwd = 1)
hist(dataset[,2], density = 20, breaks = 5, xlim = range(0:40), ylim = range(0:12),xlab = 'Incongruent', main = 'Time spent in incongruent condition')
abline(v= mean(dataset[,2]), col = "blue", lwd = 1)
da t se t
dataset
x1<-c(8,7,6,9,10,5,7,11,8,7)
x2<-c(5,6,4,6,5,3,2,9,4,4)
mean(x1)
mean(x2)
(mean(x1)-mean(x2))/sqrt(sd(x1)^2+sd(x2)^2)
qt(1.132098)
qt(df = 9 , p = 0.95)
qt(df = 23 , p = 0.95)
se->(mean(dataset[,1])-mean(dataset[,2]))/sqrt(sd(dataset[,1])^2+sd(dataset[,2])^2)
se<-(mean(dataset[,1])-mean(dataset[,2]))/sqrt(sd(dataset[,1])^2+sd(dataset[,2])^2)
se
se<-(mean(dataset[,1])-mean(dataset[,2]))/sqrt(sd(dataset[,1])^2/24+sd(dataset[,2])^2/24)
se
se<-(mean(dataset[,2])-mean(dataset[,1]))/sqrt(sd(dataset[,1])^2/24+sd(dataset[,2])^2/24)
se
d<-dataset[,2]-dataset[,1]
d
m<-mean(d)
m
d-m
(d-m)^2
sum(d-m)^2
sum((d-m)^2)/23
sqrt(sum((d-m)^2)/23)
s<-sqrt(sum((d-m)^2)/23)
s
m/(s/sqrt(24))
